// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Regexall
    {
        /// <summary>
        /// Returns a list of all matches of a regular expression in a string (including named or indexed groups).
        /// </summary>
        public static Task<RegexallResult> InvokeAsync(RegexallArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<RegexallResult>("std:index:regexall", args ?? new RegexallArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of all matches of a regular expression in a string (including named or indexed groups).
        /// </summary>
        public static Output<RegexallResult> Invoke(RegexallInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<RegexallResult>("std:index:regexall", args ?? new RegexallInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a list of all matches of a regular expression in a string (including named or indexed groups).
        /// </summary>
        public static Output<RegexallResult> Invoke(RegexallInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<RegexallResult>("std:index:regexall", args ?? new RegexallInvokeArgs(), options.WithDefaults());
    }


    public sealed class RegexallArgs : global::Pulumi.InvokeArgs
    {
        [Input("pattern", required: true)]
        public string Pattern { get; set; } = null!;

        [Input("string", required: true)]
        public string String { get; set; } = null!;

        public RegexallArgs()
        {
        }
        public static new RegexallArgs Empty => new RegexallArgs();
    }

    public sealed class RegexallInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("pattern", required: true)]
        public Input<string> Pattern { get; set; } = null!;

        [Input("string", required: true)]
        public Input<string> String { get; set; } = null!;

        public RegexallInvokeArgs()
        {
        }
        public static new RegexallInvokeArgs Empty => new RegexallInvokeArgs();
    }


    [OutputType]
    public sealed class RegexallResult
    {
        public readonly ImmutableArray<object> Result;

        [OutputConstructor]
        private RegexallResult(ImmutableArray<object> result)
        {
            Result = result;
        }
    }
}
