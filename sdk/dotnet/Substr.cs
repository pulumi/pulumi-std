// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Substr
    {
        /// <summary>
        /// Extracts a substring from the given string.
        /// </summary>
        public static Task<SubstrResult> InvokeAsync(SubstrArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SubstrResult>("std:index:substr", args ?? new SubstrArgs(), options.WithDefaults());

        /// <summary>
        /// Extracts a substring from the given string.
        /// </summary>
        public static Output<SubstrResult> Invoke(SubstrInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SubstrResult>("std:index:substr", args ?? new SubstrInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Extracts a substring from the given string.
        /// </summary>
        public static Output<SubstrResult> Invoke(SubstrInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<SubstrResult>("std:index:substr", args ?? new SubstrInvokeArgs(), options.WithDefaults());
    }


    public sealed class SubstrArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        [Input("length", required: true)]
        public int Length { get; set; }

        [Input("offset", required: true)]
        public int Offset { get; set; }

        public SubstrArgs()
        {
        }
        public static new SubstrArgs Empty => new SubstrArgs();
    }

    public sealed class SubstrInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        [Input("length", required: true)]
        public Input<int> Length { get; set; } = null!;

        [Input("offset", required: true)]
        public Input<int> Offset { get; set; } = null!;

        public SubstrInvokeArgs()
        {
        }
        public static new SubstrInvokeArgs Empty => new SubstrInvokeArgs();
    }


    [OutputType]
    public sealed class SubstrResult
    {
        public readonly string Result;

        [OutputConstructor]
        private SubstrResult(string result)
        {
            Result = result;
        }
    }
}
