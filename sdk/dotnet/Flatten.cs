// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Flatten
    {
        /// <summary>
        /// Flattens lists of lists down to a flat list of primitive values,
        /// eliminating any nested lists recursively.
        /// </summary>
        public static Task<FlattenResult> InvokeAsync(FlattenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<FlattenResult>("std:index:flatten", args ?? new FlattenArgs(), options.WithDefaults());

        /// <summary>
        /// Flattens lists of lists down to a flat list of primitive values,
        /// eliminating any nested lists recursively.
        /// </summary>
        public static Output<FlattenResult> Invoke(FlattenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<FlattenResult>("std:index:flatten", args ?? new FlattenInvokeArgs(), options.WithDefaults());
    }


    public sealed class FlattenArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        private List<object>? _input;
        public List<object> Input
        {
            get => _input ?? (_input = new List<object>());
            set => _input = value;
        }

        public FlattenArgs()
        {
        }
        public static new FlattenArgs Empty => new FlattenArgs();
    }

    public sealed class FlattenInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        private InputList<object>? _input;
        public InputList<object> Input
        {
            get => _input ?? (_input = new InputList<object>());
            set => _input = value;
        }

        public FlattenInvokeArgs()
        {
        }
        public static new FlattenInvokeArgs Empty => new FlattenInvokeArgs();
    }


    [OutputType]
    public sealed class FlattenResult
    {
        public readonly ImmutableArray<object> Result;

        [OutputConstructor]
        private FlattenResult(ImmutableArray<object> result)
        {
            Result = result;
        }
    }
}
