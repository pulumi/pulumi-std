// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Filebase64
    {
        /// <summary>
        /// Reads the contents of a file and returns them as a base64-encoded string.
        /// </summary>
        public static Task<Filebase64Result> InvokeAsync(Filebase64Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Filebase64Result>("std:index:filebase64", args ?? new Filebase64Args(), options.WithDefaults());

        /// <summary>
        /// Reads the contents of a file and returns them as a base64-encoded string.
        /// </summary>
        public static Output<Filebase64Result> Invoke(Filebase64InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Filebase64Result>("std:index:filebase64", args ?? new Filebase64InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Reads the contents of a file and returns them as a base64-encoded string.
        /// </summary>
        public static Output<Filebase64Result> Invoke(Filebase64InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Filebase64Result>("std:index:filebase64", args ?? new Filebase64InvokeArgs(), options.WithDefaults());
    }


    public sealed class Filebase64Args : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public Filebase64Args()
        {
        }
        public static new Filebase64Args Empty => new Filebase64Args();
    }

    public sealed class Filebase64InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public Filebase64InvokeArgs()
        {
        }
        public static new Filebase64InvokeArgs Empty => new Filebase64InvokeArgs();
    }


    [OutputType]
    public sealed class Filebase64Result
    {
        public readonly string Result;

        [OutputConstructor]
        private Filebase64Result(string result)
        {
            Result = result;
        }
    }
}
