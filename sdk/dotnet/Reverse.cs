// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Reverse
    {
        /// <summary>
        /// Returns a sequence with the same elements but in reverse order.
        /// </summary>
        public static Task<ReverseResult> InvokeAsync(ReverseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ReverseResult>("std:index:reverse", args ?? new ReverseArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a sequence with the same elements but in reverse order.
        /// </summary>
        public static Output<ReverseResult> Invoke(ReverseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ReverseResult>("std:index:reverse", args ?? new ReverseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a sequence with the same elements but in reverse order.
        /// </summary>
        public static Output<ReverseResult> Invoke(ReverseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ReverseResult>("std:index:reverse", args ?? new ReverseInvokeArgs(), options.WithDefaults());
    }


    public sealed class ReverseArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        private List<object>? _input;
        public List<object> Input
        {
            get => _input ?? (_input = new List<object>());
            set => _input = value;
        }

        public ReverseArgs()
        {
        }
        public static new ReverseArgs Empty => new ReverseArgs();
    }

    public sealed class ReverseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        private InputList<object>? _input;
        public InputList<object> Input
        {
            get => _input ?? (_input = new InputList<object>());
            set => _input = value;
        }

        public ReverseInvokeArgs()
        {
        }
        public static new ReverseInvokeArgs Empty => new ReverseInvokeArgs();
    }


    [OutputType]
    public sealed class ReverseResult
    {
        public readonly ImmutableArray<object> Result;

        [OutputConstructor]
        private ReverseResult(ImmutableArray<object> result)
        {
            Result = result;
        }
    }
}
