// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Indent
    {
        /// <summary>
        /// Adds a given number of spaces after each newline character in the given string.
        /// </summary>
        public static Task<IndentResult> InvokeAsync(IndentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<IndentResult>("std:index:indent", args ?? new IndentArgs(), options.WithDefaults());

        /// <summary>
        /// Adds a given number of spaces after each newline character in the given string.
        /// </summary>
        public static Output<IndentResult> Invoke(IndentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<IndentResult>("std:index:indent", args ?? new IndentInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Adds a given number of spaces after each newline character in the given string.
        /// </summary>
        public static Output<IndentResult> Invoke(IndentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<IndentResult>("std:index:indent", args ?? new IndentInvokeArgs(), options.WithDefaults());
    }


    public sealed class IndentArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        [Input("spaces", required: true)]
        public int Spaces { get; set; }

        public IndentArgs()
        {
        }
        public static new IndentArgs Empty => new IndentArgs();
    }

    public sealed class IndentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        [Input("spaces", required: true)]
        public Input<int> Spaces { get; set; } = null!;

        public IndentInvokeArgs()
        {
        }
        public static new IndentInvokeArgs Empty => new IndentInvokeArgs();
    }


    [OutputType]
    public sealed class IndentResult
    {
        public readonly string Result;

        [OutputConstructor]
        private IndentResult(string result)
        {
            Result = result;
        }
    }
}
