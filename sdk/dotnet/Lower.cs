// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Lower
    {
        /// <summary>
        /// Returns a copy of the string with all Unicode letters mapped to their lower case.
        /// </summary>
        public static Task<LowerResult> InvokeAsync(LowerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LowerResult>("std:index:lower", args ?? new LowerArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a copy of the string with all Unicode letters mapped to their lower case.
        /// </summary>
        public static Output<LowerResult> Invoke(LowerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LowerResult>("std:index:lower", args ?? new LowerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a copy of the string with all Unicode letters mapped to their lower case.
        /// </summary>
        public static Output<LowerResult> Invoke(LowerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<LowerResult>("std:index:lower", args ?? new LowerInvokeArgs(), options.WithDefaults());
    }


    public sealed class LowerArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public LowerArgs()
        {
        }
        public static new LowerArgs Empty => new LowerArgs();
    }

    public sealed class LowerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public LowerInvokeArgs()
        {
        }
        public static new LowerInvokeArgs Empty => new LowerInvokeArgs();
    }


    [OutputType]
    public sealed class LowerResult
    {
        public readonly string Result;

        [OutputConstructor]
        private LowerResult(string result)
        {
            Result = result;
        }
    }
}
