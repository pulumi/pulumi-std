// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Filesha1
    {
        /// <summary>
        /// Reads the contents of a file into a string and returns the SHA1 hash of it.
        /// </summary>
        public static Task<Filesha1Result> InvokeAsync(Filesha1Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Filesha1Result>("std:index:filesha1", args ?? new Filesha1Args(), options.WithDefaults());

        /// <summary>
        /// Reads the contents of a file into a string and returns the SHA1 hash of it.
        /// </summary>
        public static Output<Filesha1Result> Invoke(Filesha1InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Filesha1Result>("std:index:filesha1", args ?? new Filesha1InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Reads the contents of a file into a string and returns the SHA1 hash of it.
        /// </summary>
        public static Output<Filesha1Result> Invoke(Filesha1InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Filesha1Result>("std:index:filesha1", args ?? new Filesha1InvokeArgs(), options.WithDefaults());
    }


    public sealed class Filesha1Args : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public Filesha1Args()
        {
        }
        public static new Filesha1Args Empty => new Filesha1Args();
    }

    public sealed class Filesha1InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public Filesha1InvokeArgs()
        {
        }
        public static new Filesha1InvokeArgs Empty => new Filesha1InvokeArgs();
    }


    [OutputType]
    public sealed class Filesha1Result
    {
        public readonly string Result;

        [OutputConstructor]
        private Filesha1Result(string result)
        {
            Result = result;
        }
    }
}
