// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Base64encode
    {
        /// <summary>
        /// Returns a base64-encoded representation of the given string.
        /// </summary>
        public static Task<Base64encodeResult> InvokeAsync(Base64encodeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Base64encodeResult>("std:index:base64encode", args ?? new Base64encodeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a base64-encoded representation of the given string.
        /// </summary>
        public static Output<Base64encodeResult> Invoke(Base64encodeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Base64encodeResult>("std:index:base64encode", args ?? new Base64encodeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a base64-encoded representation of the given string.
        /// </summary>
        public static Output<Base64encodeResult> Invoke(Base64encodeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Base64encodeResult>("std:index:base64encode", args ?? new Base64encodeInvokeArgs(), options.WithDefaults());
    }


    public sealed class Base64encodeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public Base64encodeArgs()
        {
        }
        public static new Base64encodeArgs Empty => new Base64encodeArgs();
    }

    public sealed class Base64encodeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public Base64encodeInvokeArgs()
        {
        }
        public static new Base64encodeInvokeArgs Empty => new Base64encodeInvokeArgs();
    }


    [OutputType]
    public sealed class Base64encodeResult
    {
        public readonly string Result;

        [OutputConstructor]
        private Base64encodeResult(string result)
        {
            Result = result;
        }
    }
}
