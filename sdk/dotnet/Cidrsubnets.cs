// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Cidrsubnets
    {
        /// <summary>
        /// Takes an IP address prefix in CIDR notation (like 10.0.0.0/8) and creates a series of consecutive IP address ranges within that CIDR prefix. See https://opentofu.org/docs/language/functions/cidrsubnets/ for additional information
        /// </summary>
        public static Task<CidrsubnetsResult> InvokeAsync(CidrsubnetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<CidrsubnetsResult>("std:index:cidrsubnets", args ?? new CidrsubnetsArgs(), options.WithDefaults());

        /// <summary>
        /// Takes an IP address prefix in CIDR notation (like 10.0.0.0/8) and creates a series of consecutive IP address ranges within that CIDR prefix. See https://opentofu.org/docs/language/functions/cidrsubnets/ for additional information
        /// </summary>
        public static Output<CidrsubnetsResult> Invoke(CidrsubnetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<CidrsubnetsResult>("std:index:cidrsubnets", args ?? new CidrsubnetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Takes an IP address prefix in CIDR notation (like 10.0.0.0/8) and creates a series of consecutive IP address ranges within that CIDR prefix. See https://opentofu.org/docs/language/functions/cidrsubnets/ for additional information
        /// </summary>
        public static Output<CidrsubnetsResult> Invoke(CidrsubnetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<CidrsubnetsResult>("std:index:cidrsubnets", args ?? new CidrsubnetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class CidrsubnetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        [Input("newbits", required: true)]
        private List<int>? _newbits;
        public List<int> Newbits
        {
            get => _newbits ?? (_newbits = new List<int>());
            set => _newbits = value;
        }

        public CidrsubnetsArgs()
        {
        }
        public static new CidrsubnetsArgs Empty => new CidrsubnetsArgs();
    }

    public sealed class CidrsubnetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        [Input("newbits", required: true)]
        private InputList<int>? _newbits;
        public InputList<int> Newbits
        {
            get => _newbits ?? (_newbits = new InputList<int>());
            set => _newbits = value;
        }

        public CidrsubnetsInvokeArgs()
        {
        }
        public static new CidrsubnetsInvokeArgs Empty => new CidrsubnetsInvokeArgs();
    }


    [OutputType]
    public sealed class CidrsubnetsResult
    {
        public readonly ImmutableArray<string> Result;

        [OutputConstructor]
        private CidrsubnetsResult(ImmutableArray<string> result)
        {
            Result = result;
        }
    }
}
