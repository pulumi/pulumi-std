// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Slice
    {
        /// <summary>
        /// Returns the portion of list between from (inclusive) and to (exclusive).
        /// </summary>
        public static Task<SliceResult> InvokeAsync(SliceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SliceResult>("std:index:slice", args ?? new SliceArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the portion of list between from (inclusive) and to (exclusive).
        /// </summary>
        public static Output<SliceResult> Invoke(SliceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SliceResult>("std:index:slice", args ?? new SliceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the portion of list between from (inclusive) and to (exclusive).
        /// </summary>
        public static Output<SliceResult> Invoke(SliceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<SliceResult>("std:index:slice", args ?? new SliceInvokeArgs(), options.WithDefaults());
    }


    public sealed class SliceArgs : global::Pulumi.InvokeArgs
    {
        [Input("from")]
        public int? From { get; set; }

        [Input("list", required: true)]
        private List<object>? _list;
        public List<object> List
        {
            get => _list ?? (_list = new List<object>());
            set => _list = value;
        }

        [Input("to")]
        public int? To { get; set; }

        public SliceArgs()
        {
        }
        public static new SliceArgs Empty => new SliceArgs();
    }

    public sealed class SliceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("from")]
        public Input<int>? From { get; set; }

        [Input("list", required: true)]
        private InputList<object>? _list;
        public InputList<object> List
        {
            get => _list ?? (_list = new InputList<object>());
            set => _list = value;
        }

        [Input("to")]
        public Input<int>? To { get; set; }

        public SliceInvokeArgs()
        {
        }
        public static new SliceInvokeArgs Empty => new SliceInvokeArgs();
    }


    [OutputType]
    public sealed class SliceResult
    {
        public readonly ImmutableArray<object> Result;

        [OutputConstructor]
        private SliceResult(ImmutableArray<object> result)
        {
            Result = result;
        }
    }
}
