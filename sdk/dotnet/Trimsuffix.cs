// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Trimsuffix
    {
        /// <summary>
        /// Removes the specified suffix from the end of the given string, if present.
        /// </summary>
        public static Task<TrimsuffixResult> InvokeAsync(TrimsuffixArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<TrimsuffixResult>("std:index:trimsuffix", args ?? new TrimsuffixArgs(), options.WithDefaults());

        /// <summary>
        /// Removes the specified suffix from the end of the given string, if present.
        /// </summary>
        public static Output<TrimsuffixResult> Invoke(TrimsuffixInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<TrimsuffixResult>("std:index:trimsuffix", args ?? new TrimsuffixInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Removes the specified suffix from the end of the given string, if present.
        /// </summary>
        public static Output<TrimsuffixResult> Invoke(TrimsuffixInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<TrimsuffixResult>("std:index:trimsuffix", args ?? new TrimsuffixInvokeArgs(), options.WithDefaults());
    }


    public sealed class TrimsuffixArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        [Input("suffix", required: true)]
        public string Suffix { get; set; } = null!;

        public TrimsuffixArgs()
        {
        }
        public static new TrimsuffixArgs Empty => new TrimsuffixArgs();
    }

    public sealed class TrimsuffixInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        [Input("suffix", required: true)]
        public Input<string> Suffix { get; set; } = null!;

        public TrimsuffixInvokeArgs()
        {
        }
        public static new TrimsuffixInvokeArgs Empty => new TrimsuffixInvokeArgs();
    }


    [OutputType]
    public sealed class TrimsuffixResult
    {
        public readonly string Result;

        [OutputConstructor]
        private TrimsuffixResult(string result)
        {
            Result = result;
        }
    }
}
