// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Pathexpand
    {
        /// <summary>
        /// Returns a filepath string with ~ expanded to the home directory.
        /// </summary>
        public static Task<PathexpandResult> InvokeAsync(PathexpandArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PathexpandResult>("std:index:pathexpand", args ?? new PathexpandArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a filepath string with ~ expanded to the home directory.
        /// </summary>
        public static Output<PathexpandResult> Invoke(PathexpandInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PathexpandResult>("std:index:pathexpand", args ?? new PathexpandInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a filepath string with ~ expanded to the home directory.
        /// </summary>
        public static Output<PathexpandResult> Invoke(PathexpandInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<PathexpandResult>("std:index:pathexpand", args ?? new PathexpandInvokeArgs(), options.WithDefaults());
    }


    public sealed class PathexpandArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public PathexpandArgs()
        {
        }
        public static new PathexpandArgs Empty => new PathexpandArgs();
    }

    public sealed class PathexpandInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public PathexpandInvokeArgs()
        {
        }
        public static new PathexpandInvokeArgs Empty => new PathexpandInvokeArgs();
    }


    [OutputType]
    public sealed class PathexpandResult
    {
        public readonly string Result;

        [OutputConstructor]
        private PathexpandResult(string result)
        {
            Result = result;
        }
    }
}
