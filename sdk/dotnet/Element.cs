// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Element
    {
        /// <summary>
        /// Returns the element at the specified index.
        /// </summary>
        public static Task<ElementResult> InvokeAsync(ElementArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ElementResult>("std:index:element", args ?? new ElementArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the element at the specified index.
        /// </summary>
        public static Output<ElementResult> Invoke(ElementInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ElementResult>("std:index:element", args ?? new ElementInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the element at the specified index.
        /// </summary>
        public static Output<ElementResult> Invoke(ElementInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ElementResult>("std:index:element", args ?? new ElementInvokeArgs(), options.WithDefaults());
    }


    public sealed class ElementArgs : global::Pulumi.InvokeArgs
    {
        [Input("index", required: true)]
        public int Index { get; set; }

        [Input("input", required: true)]
        private List<object>? _input;
        public List<object> Input
        {
            get => _input ?? (_input = new List<object>());
            set => _input = value;
        }

        public ElementArgs()
        {
        }
        public static new ElementArgs Empty => new ElementArgs();
    }

    public sealed class ElementInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("index", required: true)]
        public Input<int> Index { get; set; } = null!;

        [Input("input", required: true)]
        private InputList<object>? _input;
        public InputList<object> Input
        {
            get => _input ?? (_input = new InputList<object>());
            set => _input = value;
        }

        public ElementInvokeArgs()
        {
        }
        public static new ElementInvokeArgs Empty => new ElementInvokeArgs();
    }


    [OutputType]
    public sealed class ElementResult
    {
        public readonly object Result;

        [OutputConstructor]
        private ElementResult(object result)
        {
            Result = result;
        }
    }
}
