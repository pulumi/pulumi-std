// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Std
{
    public static class Parseint
    {
        /// <summary>
        /// Parses the given string as a representation of an integer in the specified base
        /// and returns the resulting number. The base must be between 2 and 62 inclusive.
        /// 	.
        /// </summary>
        public static Task<ParseintResult> InvokeAsync(ParseintArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ParseintResult>("std:index:parseint", args ?? new ParseintArgs(), options.WithDefaults());

        /// <summary>
        /// Parses the given string as a representation of an integer in the specified base
        /// and returns the resulting number. The base must be between 2 and 62 inclusive.
        /// 	.
        /// </summary>
        public static Output<ParseintResult> Invoke(ParseintInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ParseintResult>("std:index:parseint", args ?? new ParseintInvokeArgs(), options.WithDefaults());
    }


    public sealed class ParseintArgs : global::Pulumi.InvokeArgs
    {
        [Input("base")]
        public int? Base { get; set; }

        [Input("input", required: true)]
        public string Input { get; set; } = null!;

        public ParseintArgs()
        {
        }
        public static new ParseintArgs Empty => new ParseintArgs();
    }

    public sealed class ParseintInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("base")]
        public Input<int>? Base { get; set; }

        [Input("input", required: true)]
        public Input<string> Input { get; set; } = null!;

        public ParseintInvokeArgs()
        {
        }
        public static new ParseintInvokeArgs Empty => new ParseintInvokeArgs();
    }


    [OutputType]
    public sealed class ParseintResult
    {
        public readonly int Result;

        [OutputConstructor]
        private ParseintResult(int result)
        {
            Result = result;
        }
    }
}
