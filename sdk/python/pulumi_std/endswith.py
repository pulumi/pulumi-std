# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'EndswithResult',
    'AwaitableEndswithResult',
    'endswith',
    'endswith_output',
]

@pulumi.output_type
class EndswithResult:
    def __init__(__self__, result=None):
        if result and not isinstance(result, bool):
            raise TypeError("Expected argument 'result' to be a bool")
        pulumi.set(__self__, "result", result)

    @property
    @pulumi.getter
    def result(self) -> bool:
        return pulumi.get(self, "result")


class AwaitableEndswithResult(EndswithResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return EndswithResult(
            result=self.result)


def endswith(input: Optional[str] = None,
             suffix: Optional[str] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableEndswithResult:
    """
    Determines if the input string ends with the suffix.
    """
    __args__ = dict()
    __args__['input'] = input
    __args__['suffix'] = suffix
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('std:index:endswith', __args__, opts=opts, typ=EndswithResult).value

    return AwaitableEndswithResult(
        result=pulumi.get(__ret__, 'result'))
def endswith_output(input: Optional[pulumi.Input[str]] = None,
                    suffix: Optional[pulumi.Input[str]] = None,
                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[EndswithResult]:
    """
    Determines if the input string ends with the suffix.
    """
    __args__ = dict()
    __args__['input'] = input
    __args__['suffix'] = suffix
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('std:index:endswith', __args__, opts=opts, typ=EndswithResult)
    return __ret__.apply(lambda __response__: EndswithResult(
        result=pulumi.get(__response__, 'result')))
