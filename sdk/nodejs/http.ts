// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Performs an HTTP request and returns the response.
 */
export function http(args: HttpArgs, opts?: pulumi.InvokeOptions): Promise<HttpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:http", {
        "attempts": args.attempts,
        "caCertPem": args.caCertPem,
        "insecure": args.insecure,
        "maxDelayMs": args.maxDelayMs,
        "method": args.method,
        "minDelayMs": args.minDelayMs,
        "requestBody": args.requestBody,
        "requestHeaders": args.requestHeaders,
        "requestTimeoutMs": args.requestTimeoutMs,
        "url": args.url,
    }, opts);
}

export interface HttpArgs {
    attempts?: number;
    caCertPem?: string;
    insecure?: boolean;
    maxDelayMs?: number;
    method?: string;
    minDelayMs?: number;
    requestBody?: string;
    requestHeaders?: {[key: string]: string};
    requestTimeoutMs?: number;
    url: string;
}

export interface HttpResult {
    readonly id: string;
    readonly responseBody: string;
    readonly responseBodyBase64: string;
    readonly responseHeaders: {[key: string]: string};
    readonly statusCode: number;
}
/**
 * Performs an HTTP request and returns the response.
 */
export function httpOutput(args: HttpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<HttpResult> {
    return pulumi.output(args).apply((a: any) => http(a, opts))
}

export interface HttpOutputArgs {
    attempts?: pulumi.Input<number>;
    caCertPem?: pulumi.Input<string>;
    insecure?: pulumi.Input<boolean>;
    maxDelayMs?: pulumi.Input<number>;
    method?: pulumi.Input<string>;
    minDelayMs?: pulumi.Input<number>;
    requestBody?: pulumi.Input<string>;
    requestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    requestTimeoutMs?: pulumi.Input<number>;
    url: pulumi.Input<string>;
}
