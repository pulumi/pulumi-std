// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Takes an IP address range in CIDR notation (like 10.0.0.0/8) and extends its prefix
 * to include an additional subnet number. For example, cidrsubnet("10.0.0.0/8", netnum: 2, newbits: 8)
 * returns 10.2.0.0/16; cidrsubnet("2607:f298:6051:516c::/64", netnum: 2, newbits: 8) returns
 * 2607:f298:6051:516c:200::/72.
 */
export function cidrsubnet(args: CidrsubnetArgs, opts?: pulumi.InvokeOptions): Promise<CidrsubnetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:cidrsubnet", {
        "input": args.input,
        "netnum": args.netnum,
        "newbits": args.newbits,
    }, opts);
}

export interface CidrsubnetArgs {
    input: string;
    netnum: number;
    newbits: number;
}

export interface CidrsubnetResult {
    readonly result: string;
}
/**
 * Takes an IP address range in CIDR notation (like 10.0.0.0/8) and extends its prefix
 * to include an additional subnet number. For example, cidrsubnet("10.0.0.0/8", netnum: 2, newbits: 8)
 * returns 10.2.0.0/16; cidrsubnet("2607:f298:6051:516c::/64", netnum: 2, newbits: 8) returns
 * 2607:f298:6051:516c:200::/72.
 */
export function cidrsubnetOutput(args: CidrsubnetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<CidrsubnetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:cidrsubnet", {
        "input": args.input,
        "netnum": args.netnum,
        "newbits": args.newbits,
    }, opts);
}

export interface CidrsubnetOutputArgs {
    input: pulumi.Input<string>;
    netnum: pulumi.Input<number>;
    newbits: pulumi.Input<number>;
}
