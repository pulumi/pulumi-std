// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Does a search and replace on the given string.
 * All instances of search are replaced with the value of replace.
 * If search is wrapped in forward slashes, it is treated as a regular expression.
 * If using a regular expression, replace can reference subcaptures in the regular expression by
 * using $n where n is the index or name of the subcapture. If using a regular expression,
 * the syntax conforms to the re2 regular expression syntax.
 */
export function replace(args: ReplaceArgs, opts?: pulumi.InvokeOptions): Promise<ReplaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:replace", {
        "replace": args.replace,
        "search": args.search,
        "text": args.text,
    }, opts);
}

export interface ReplaceArgs {
    replace: string;
    search: string;
    text: string;
}

export interface ReplaceResult {
    readonly result: string;
}
/**
 * Does a search and replace on the given string.
 * All instances of search are replaced with the value of replace.
 * If search is wrapped in forward slashes, it is treated as a regular expression.
 * If using a regular expression, replace can reference subcaptures in the regular expression by
 * using $n where n is the index or name of the subcapture. If using a regular expression,
 * the syntax conforms to the re2 regular expression syntax.
 */
export function replaceOutput(args: ReplaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ReplaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:replace", {
        "replace": args.replace,
        "search": args.search,
        "text": args.text,
    }, opts);
}

export interface ReplaceOutputArgs {
    replace: pulumi.Input<string>;
    search: pulumi.Input<string>;
    text: pulumi.Input<string>;
}
