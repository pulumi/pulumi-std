// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns an absolute representation of the specified path.
 * If the path is not absolute it will be joined with the current working directory to turn it into an absolute path.
 */
export function abspath(args: AbspathArgs, opts?: pulumi.InvokeOptions): Promise<AbspathResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:abspath", {
        "input": args.input,
    }, opts);
}

export interface AbspathArgs {
    input: string;
}

export interface AbspathResult {
    readonly result: string;
}
/**
 * Returns an absolute representation of the specified path.
 * If the path is not absolute it will be joined with the current working directory to turn it into an absolute path.
 */
export function abspathOutput(args: AbspathOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<AbspathResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:abspath", {
        "input": args.input,
    }, opts);
}

export interface AbspathOutputArgs {
    input: pulumi.Input<string>;
}
