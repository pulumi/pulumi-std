// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns a filepath string with ~ expanded to the home directory.
 */
export function pathexpand(args: PathexpandArgs, opts?: pulumi.InvokeOptions): Promise<PathexpandResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:pathexpand", {
        "input": args.input,
    }, opts);
}

export interface PathexpandArgs {
    input: string;
}

export interface PathexpandResult {
    readonly result: string;
}
/**
 * Returns a filepath string with ~ expanded to the home directory.
 */
export function pathexpandOutput(args: PathexpandOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<PathexpandResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:pathexpand", {
        "input": args.input,
    }, opts);
}

export interface PathexpandOutputArgs {
    input: pulumi.Input<string>;
}
