// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Converts its argument to a boolean value. Only boolean values, null, and the exact strings
 * 	"true" and "false" can be converted to boolean. All other values will result in an error.
 */
export function tobool(args: ToboolArgs, opts?: pulumi.InvokeOptions): Promise<ToboolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:tobool", {
        "input": args.input,
    }, opts);
}

export interface ToboolArgs {
    input: any;
}

export interface ToboolResult {
    readonly result?: boolean;
}
/**
 * Converts its argument to a boolean value. Only boolean values, null, and the exact strings
 * 	"true" and "false" can be converted to boolean. All other values will result in an error.
 */
export function toboolOutput(args: ToboolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ToboolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:tobool", {
        "input": args.input,
    }, opts);
}

export interface ToboolOutputArgs {
    input: any;
}
