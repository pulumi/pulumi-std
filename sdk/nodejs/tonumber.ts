// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Converts its argument to a number value. Only number values, null, and strings
 * 	containing decimal representations of numbers can be converted to number. All other values will result in an error
 */
export function tonumber(args: TonumberArgs, opts?: pulumi.InvokeOptions): Promise<TonumberResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:tonumber", {
        "input": args.input,
    }, opts);
}

export interface TonumberArgs {
    input: any;
}

export interface TonumberResult {
    readonly result?: number;
}
/**
 * Converts its argument to a number value. Only number values, null, and strings
 * 	containing decimal representations of numbers can be converted to number. All other values will result in an error
 */
export function tonumberOutput(args: TonumberOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<TonumberResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:tonumber", {
        "input": args.input,
    }, opts);
}

export interface TonumberOutputArgs {
    input: any;
}
