// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns the first non-nil value or non empty string from the given arguments as a the most generic type.
 */
export function coalesce(args: CoalesceArgs, opts?: pulumi.InvokeOptions): Promise<CoalesceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:coalesce", {
        "input": args.input,
    }, opts);
}

export interface CoalesceArgs {
    input: any[];
}

export interface CoalesceResult {
    readonly result: any;
}
/**
 * Returns the first non-nil value or non empty string from the given arguments as a the most generic type.
 */
export function coalesceOutput(args: CoalesceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<CoalesceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:coalesce", {
        "input": args.input,
    }, opts);
}

export interface CoalesceOutputArgs {
    input: pulumi.Input<any[]>;
}
