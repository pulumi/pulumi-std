// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Takes an IP address range in CIDR notation and returns the address-formatted subnet mask format
 * that some systems expect for IPv4 interfaces.
 * For example, cidrnetmask("10.0.0.0/8") returns 255.0.0.0.
 * Not applicable to IPv6 networks since CIDR notation is the only valid notation for IPv6.
 */
export function cidrnetmask(args: CidrnetmaskArgs, opts?: pulumi.InvokeOptions): Promise<CidrnetmaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:cidrnetmask", {
        "input": args.input,
    }, opts);
}

export interface CidrnetmaskArgs {
    input: string;
}

export interface CidrnetmaskResult {
    readonly result: string;
}
/**
 * Takes an IP address range in CIDR notation and returns the address-formatted subnet mask format
 * that some systems expect for IPv4 interfaces.
 * For example, cidrnetmask("10.0.0.0/8") returns 255.0.0.0.
 * Not applicable to IPv6 networks since CIDR notation is the only valid notation for IPv6.
 */
export function cidrnetmaskOutput(args: CidrnetmaskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<CidrnetmaskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:cidrnetmask", {
        "input": args.input,
    }, opts);
}

export interface CidrnetmaskOutputArgs {
    input: pulumi.Input<string>;
}
