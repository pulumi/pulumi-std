// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns true if a list contains the given element and returns false otherwise.
 */
export function contains(args: ContainsArgs, opts?: pulumi.InvokeOptions): Promise<ContainsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:contains", {
        "element": args.element,
        "input": args.input,
    }, opts);
}

export interface ContainsArgs {
    element: any;
    input: any[];
}

export interface ContainsResult {
    readonly result: boolean;
}
/**
 * Returns true if a list contains the given element and returns false otherwise.
 */
export function containsOutput(args: ContainsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<ContainsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:contains", {
        "element": args.element,
        "input": args.input,
    }, opts);
}

export interface ContainsOutputArgs {
    element: any;
    input: pulumi.Input<any[]>;
}
