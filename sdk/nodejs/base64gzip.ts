// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Compresses the given string with gzip and then encodes the result to base64.
 */
export function base64gzip(args: Base64gzipArgs, opts?: pulumi.InvokeOptions): Promise<Base64gzipResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:base64gzip", {
        "input": args.input,
    }, opts);
}

export interface Base64gzipArgs {
    input: string;
}

export interface Base64gzipResult {
    readonly result: string;
}
/**
 * Compresses the given string with gzip and then encodes the result to base64.
 */
export function base64gzipOutput(args: Base64gzipOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<Base64gzipResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:base64gzip", {
        "input": args.input,
    }, opts);
}

export interface Base64gzipOutputArgs {
    input: pulumi.Input<string>;
}
