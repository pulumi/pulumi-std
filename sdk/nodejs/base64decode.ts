// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Given a base64-encoded string, decodes it and returns the original string.
 */
export function base64decode(args: Base64decodeArgs, opts?: pulumi.InvokeOptions): Promise<Base64decodeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:base64decode", {
        "input": args.input,
    }, opts);
}

export interface Base64decodeArgs {
    input: string;
}

export interface Base64decodeResult {
    readonly result: string;
}
/**
 * Given a base64-encoded string, decodes it and returns the original string.
 */
export function base64decodeOutput(args: Base64decodeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<Base64decodeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:base64decode", {
        "input": args.input,
    }, opts);
}

export interface Base64decodeOutputArgs {
    input: pulumi.Input<string>;
}
