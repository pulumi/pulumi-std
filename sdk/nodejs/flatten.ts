// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Flattens lists of lists down to a flat list of primitive values,
 * eliminating any nested lists recursively.
 */
export function flatten(args: FlattenArgs, opts?: pulumi.InvokeOptions): Promise<FlattenResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:flatten", {
        "input": args.input,
    }, opts);
}

export interface FlattenArgs {
    input: any[];
}

export interface FlattenResult {
    readonly result: any[];
}
/**
 * Flattens lists of lists down to a flat list of primitive values,
 * eliminating any nested lists recursively.
 */
export function flattenOutput(args: FlattenOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<FlattenResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:flatten", {
        "input": args.input,
    }, opts);
}

export interface FlattenOutputArgs {
    input: pulumi.Input<any[]>;
}
