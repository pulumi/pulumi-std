// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Removes any space characters from the start and end of the given string,
 * 	following the Unicode definition of \"space\" (i.e. spaces, tabs, newline, etc.).
 */
export function trimspace(args: TrimspaceArgs, opts?: pulumi.InvokeOptions): Promise<TrimspaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:trimspace", {
        "input": args.input,
    }, opts);
}

export interface TrimspaceArgs {
    input: string;
}

export interface TrimspaceResult {
    readonly result: string;
}
/**
 * Removes any space characters from the start and end of the given string,
 * 	following the Unicode definition of \"space\" (i.e. spaces, tabs, newline, etc.).
 */
export function trimspaceOutput(args: TrimspaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<TrimspaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:trimspace", {
        "input": args.input,
    }, opts);
}

export interface TrimspaceOutputArgs {
    input: pulumi.Input<string>;
}
