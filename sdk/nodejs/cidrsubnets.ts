// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Takes an IP address prefix in CIDR notation (like 10.0.0.0/8) and creates a series of consecutive IP address ranges within that CIDR prefix. See https://opentofu.org/docs/language/functions/cidrsubnets/ for additional information
 */
export function cidrsubnets(args: CidrsubnetsArgs, opts?: pulumi.InvokeOptions): Promise<CidrsubnetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:cidrsubnets", {
        "input": args.input,
        "newbits": args.newbits,
    }, opts);
}

export interface CidrsubnetsArgs {
    input: string;
    newbits: number[];
}

export interface CidrsubnetsResult {
    readonly result: string[];
}
/**
 * Takes an IP address prefix in CIDR notation (like 10.0.0.0/8) and creates a series of consecutive IP address ranges within that CIDR prefix. See https://opentofu.org/docs/language/functions/cidrsubnets/ for additional information
 */
export function cidrsubnetsOutput(args: CidrsubnetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<CidrsubnetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:cidrsubnets", {
        "input": args.input,
        "newbits": args.newbits,
    }, opts);
}

export interface CidrsubnetsOutputArgs {
    input: pulumi.Input<string>;
    newbits: pulumi.Input<pulumi.Input<number>[]>;
}
