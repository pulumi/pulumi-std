// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Converts its argument to a string value. Only primitive types (string, number, bool)
 * 	and null can be converted to string. All other values will result in an error.
 */
export function tostring(args: TostringArgs, opts?: pulumi.InvokeOptions): Promise<TostringResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:tostring", {
        "input": args.input,
    }, opts);
}

export interface TostringArgs {
    input: any;
}

export interface TostringResult {
    readonly result?: string;
}
/**
 * Converts its argument to a string value. Only primitive types (string, number, bool)
 * 	and null can be converted to string. All other values will result in an error.
 */
export function tostringOutput(args: TostringOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<TostringResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:tostring", {
        "input": args.input,
    }, opts);
}

export interface TostringOutputArgs {
    input: any;
}
