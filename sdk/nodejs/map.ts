// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns a map consisting of the key/value pairs specified as arguments.
 */
export function map(args: MapArgs, opts?: pulumi.InvokeOptions): Promise<MapResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("std:index:map", {
        "args": args.args,
    }, opts);
}

export interface MapArgs {
    args: any[];
}

export interface MapResult {
    readonly result: {[key: string]: any};
}
/**
 * Returns a map consisting of the key/value pairs specified as arguments.
 */
export function mapOutput(args: MapOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<MapResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("std:index:map", {
        "args": args.args,
    }, opts);
}

export interface MapOutputArgs {
    args: pulumi.Input<any[]>;
}
