// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-std/sdk/go/std/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Reads the contents of a file into a string and returns the base64-encoded SHA256 hash of it.
func Filebase64sha256(ctx *pulumi.Context, args *Filebase64sha256Args, opts ...pulumi.InvokeOption) (*Filebase64sha256Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv Filebase64sha256Result
	err := ctx.Invoke("std:index:filebase64sha256", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type Filebase64sha256Args struct {
	Input string `pulumi:"input"`
}

type Filebase64sha256Result struct {
	Result string `pulumi:"result"`
}

func Filebase64sha256Output(ctx *pulumi.Context, args Filebase64sha256OutputArgs, opts ...pulumi.InvokeOption) Filebase64sha256ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (Filebase64sha256Result, error) {
			args := v.(Filebase64sha256Args)
			r, err := Filebase64sha256(ctx, &args, opts...)
			var s Filebase64sha256Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(Filebase64sha256ResultOutput)
}

type Filebase64sha256OutputArgs struct {
	Input pulumi.StringInput `pulumi:"input"`
}

func (Filebase64sha256OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Filebase64sha256Args)(nil)).Elem()
}

type Filebase64sha256ResultOutput struct{ *pulumi.OutputState }

func (Filebase64sha256ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Filebase64sha256Result)(nil)).Elem()
}

func (o Filebase64sha256ResultOutput) ToFilebase64sha256ResultOutput() Filebase64sha256ResultOutput {
	return o
}

func (o Filebase64sha256ResultOutput) ToFilebase64sha256ResultOutputWithContext(ctx context.Context) Filebase64sha256ResultOutput {
	return o
}

func (o Filebase64sha256ResultOutput) ToOutput(ctx context.Context) pulumix.Output[Filebase64sha256Result] {
	return pulumix.Output[Filebase64sha256Result]{
		OutputState: o.OutputState,
	}
}

func (o Filebase64sha256ResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v Filebase64sha256Result) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(Filebase64sha256ResultOutput{})
}
