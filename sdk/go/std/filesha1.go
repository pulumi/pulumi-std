// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-std/sdk/go/std/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Reads the contents of a file into a string and returns the SHA1 hash of it.
func Filesha1(ctx *pulumi.Context, args *Filesha1Args, opts ...pulumi.InvokeOption) (*Filesha1Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv Filesha1Result
	err := ctx.Invoke("std:index:filesha1", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type Filesha1Args struct {
	Input string `pulumi:"input"`
}

type Filesha1Result struct {
	Result string `pulumi:"result"`
}

func Filesha1Output(ctx *pulumi.Context, args Filesha1OutputArgs, opts ...pulumi.InvokeOption) Filesha1ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (Filesha1Result, error) {
			args := v.(Filesha1Args)
			r, err := Filesha1(ctx, &args, opts...)
			var s Filesha1Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(Filesha1ResultOutput)
}

type Filesha1OutputArgs struct {
	Input pulumi.StringInput `pulumi:"input"`
}

func (Filesha1OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Filesha1Args)(nil)).Elem()
}

type Filesha1ResultOutput struct{ *pulumi.OutputState }

func (Filesha1ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Filesha1Result)(nil)).Elem()
}

func (o Filesha1ResultOutput) ToFilesha1ResultOutput() Filesha1ResultOutput {
	return o
}

func (o Filesha1ResultOutput) ToFilesha1ResultOutputWithContext(ctx context.Context) Filesha1ResultOutput {
	return o
}

func (o Filesha1ResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v Filesha1Result) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(Filesha1ResultOutput{})
}
