// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-std/sdk/go/std/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the largest of the floats.
func Max(ctx *pulumi.Context, args *MaxArgs, opts ...pulumi.InvokeOption) (*MaxResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv MaxResult
	err := ctx.Invoke("std:index:max", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type MaxArgs struct {
	Input []float64 `pulumi:"input"`
}

type MaxResult struct {
	Result float64 `pulumi:"result"`
}

func MaxOutput(ctx *pulumi.Context, args MaxOutputArgs, opts ...pulumi.InvokeOption) MaxResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (MaxResult, error) {
			args := v.(MaxArgs)
			r, err := Max(ctx, &args, opts...)
			var s MaxResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(MaxResultOutput)
}

type MaxOutputArgs struct {
	Input pulumi.Float64ArrayInput `pulumi:"input"`
}

func (MaxOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxArgs)(nil)).Elem()
}

type MaxResultOutput struct{ *pulumi.OutputState }

func (MaxResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaxResult)(nil)).Elem()
}

func (o MaxResultOutput) ToMaxResultOutput() MaxResultOutput {
	return o
}

func (o MaxResultOutput) ToMaxResultOutputWithContext(ctx context.Context) MaxResultOutput {
	return o
}

func (o MaxResultOutput) Result() pulumi.Float64Output {
	return o.ApplyT(func(v MaxResult) float64 { return v.Result }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(MaxResultOutput{})
}
