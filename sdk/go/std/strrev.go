// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the given string with all of its Unicode characters in reverse order.
func Strrev(ctx *pulumi.Context, args *StrrevArgs, opts ...pulumi.InvokeOption) (*StrrevResult, error) {
	var rv StrrevResult
	err := ctx.Invoke("std:index:strrev", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type StrrevArgs struct {
	Input string `pulumi:"input"`
}

type StrrevResult struct {
	Result string `pulumi:"result"`
}

func StrrevOutput(ctx *pulumi.Context, args StrrevOutputArgs, opts ...pulumi.InvokeOption) StrrevResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (StrrevResult, error) {
			args := v.(StrrevArgs)
			r, err := Strrev(ctx, &args, opts...)
			var s StrrevResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(StrrevResultOutput)
}

type StrrevOutputArgs struct {
	Input pulumi.StringInput `pulumi:"input"`
}

func (StrrevOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrrevArgs)(nil)).Elem()
}

type StrrevResultOutput struct{ *pulumi.OutputState }

func (StrrevResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrrevResult)(nil)).Elem()
}

func (o StrrevResultOutput) ToStrrevResultOutput() StrrevResultOutput {
	return o
}

func (o StrrevResultOutput) ToStrrevResultOutputWithContext(ctx context.Context) StrrevResultOutput {
	return o
}

func (o StrrevResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v StrrevResult) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StrrevResultOutput{})
}
