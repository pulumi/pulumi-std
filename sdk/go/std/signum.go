// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the greatest integer value less than or equal to the argument.
func Signum(ctx *pulumi.Context, args *SignumArgs, opts ...pulumi.InvokeOption) (*SignumResult, error) {
	var rv SignumResult
	err := ctx.Invoke("std:index:signum", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type SignumArgs struct {
	Input float64 `pulumi:"input"`
}

type SignumResult struct {
	Result float64 `pulumi:"result"`
}

func SignumOutput(ctx *pulumi.Context, args SignumOutputArgs, opts ...pulumi.InvokeOption) SignumResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SignumResult, error) {
			args := v.(SignumArgs)
			r, err := Signum(ctx, &args, opts...)
			var s SignumResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SignumResultOutput)
}

type SignumOutputArgs struct {
	Input pulumi.Float64Input `pulumi:"input"`
}

func (SignumOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignumArgs)(nil)).Elem()
}

type SignumResultOutput struct{ *pulumi.OutputState }

func (SignumResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignumResult)(nil)).Elem()
}

func (o SignumResultOutput) ToSignumResultOutput() SignumResultOutput {
	return o
}

func (o SignumResultOutput) ToSignumResultOutputWithContext(ctx context.Context) SignumResultOutput {
	return o
}

func (o SignumResultOutput) Result() pulumi.Float64Output {
	return o.ApplyT(func(v SignumResult) float64 { return v.Result }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(SignumResultOutput{})
}
