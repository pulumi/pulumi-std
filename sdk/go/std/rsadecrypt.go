// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Decrypts an RSA-encrypted ciphertext.
// The cipher text must be base64-encoded and the key must be in PEM format.
func Rsadecrypt(ctx *pulumi.Context, args *RsadecryptArgs, opts ...pulumi.InvokeOption) (*RsadecryptResult, error) {
	var rv RsadecryptResult
	err := ctx.Invoke("std:index:rsadecrypt", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type RsadecryptArgs struct {
	CipherText string `pulumi:"cipherText"`
	Key        string `pulumi:"key"`
}

type RsadecryptResult struct {
	Result string `pulumi:"result"`
}

func RsadecryptOutput(ctx *pulumi.Context, args RsadecryptOutputArgs, opts ...pulumi.InvokeOption) RsadecryptResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RsadecryptResult, error) {
			args := v.(RsadecryptArgs)
			r, err := Rsadecrypt(ctx, &args, opts...)
			var s RsadecryptResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RsadecryptResultOutput)
}

type RsadecryptOutputArgs struct {
	CipherText pulumi.StringInput `pulumi:"cipherText"`
	Key        pulumi.StringInput `pulumi:"key"`
}

func (RsadecryptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RsadecryptArgs)(nil)).Elem()
}

type RsadecryptResultOutput struct{ *pulumi.OutputState }

func (RsadecryptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RsadecryptResult)(nil)).Elem()
}

func (o RsadecryptResultOutput) ToRsadecryptResultOutput() RsadecryptResultOutput {
	return o
}

func (o RsadecryptResultOutput) ToRsadecryptResultOutputWithContext(ctx context.Context) RsadecryptResultOutput {
	return o
}

func (o RsadecryptResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v RsadecryptResult) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RsadecryptResultOutput{})
}
