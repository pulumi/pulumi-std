// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-std/sdk/go/std/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Reads the contents of a file and returns them as a base64-encoded string.
func Filebase64(ctx *pulumi.Context, args *Filebase64Args, opts ...pulumi.InvokeOption) (*Filebase64Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv Filebase64Result
	err := ctx.Invoke("std:index:filebase64", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type Filebase64Args struct {
	Input string `pulumi:"input"`
}

type Filebase64Result struct {
	Result string `pulumi:"result"`
}

func Filebase64Output(ctx *pulumi.Context, args Filebase64OutputArgs, opts ...pulumi.InvokeOption) Filebase64ResultOutput {
	outputResult := pulumix.ApplyErr[*Filebase64Args](args.ToOutput(), func(plainArgs *Filebase64Args) (*Filebase64Result, error) {
		return Filebase64(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[Filebase64ResultOutput, *Filebase64Result](outputResult)
}

type Filebase64OutputArgs struct {
	Input pulumix.Input[string] `pulumi:"input"`
}

func (args Filebase64OutputArgs) ToOutput() pulumix.Output[*Filebase64Args] {
	allArgs := pulumix.All(
		args.Input.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *Filebase64Args {
		return &Filebase64Args{
			Input: resolvedArgs[0].(string),
		}
	})
}

type Filebase64ResultOutput struct{ *pulumi.OutputState }

func (Filebase64ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Filebase64Result)(nil)).Elem()
}

func (o Filebase64ResultOutput) ToOutput(context.Context) pulumix.Output[*Filebase64Result] {
	return pulumix.Output[*Filebase64Result]{
		OutputState: o.OutputState,
	}
}

func (o Filebase64ResultOutput) Result() pulumix.Output[string] {
	return pulumix.Apply[*Filebase64Result](o, func(v *Filebase64Result) string { return v.Result })
}
