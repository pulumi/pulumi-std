// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package std

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-std/sdk/go/std/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns a base64-encoded representation of raw SHA-512 sum of the given string.
// This is not equivalent of base64encode(sha512(string)) since sha512() returns hexadecimal representation.
func Base64sha512(ctx *pulumi.Context, args *Base64sha512Args, opts ...pulumi.InvokeOption) (*Base64sha512Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv Base64sha512Result
	err := ctx.Invoke("std:index:base64sha512", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type Base64sha512Args struct {
	Input string `pulumi:"input"`
}

type Base64sha512Result struct {
	Result string `pulumi:"result"`
}

func Base64sha512Output(ctx *pulumi.Context, args Base64sha512OutputArgs, opts ...pulumi.InvokeOption) Base64sha512ResultOutput {
	outputResult := pulumix.ApplyErr[*Base64sha512Args](args.ToOutput(), func(plainArgs *Base64sha512Args) (*Base64sha512Result, error) {
		return Base64sha512(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[Base64sha512ResultOutput, *Base64sha512Result](outputResult)
}

type Base64sha512OutputArgs struct {
	Input pulumix.Input[string] `pulumi:"input"`
}

func (args Base64sha512OutputArgs) ToOutput() pulumix.Output[*Base64sha512Args] {
	allArgs := pulumix.All(
		args.Input.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *Base64sha512Args {
		return &Base64sha512Args{
			Input: resolvedArgs[0].(string),
		}
	})
}

type Base64sha512ResultOutput struct{ *pulumi.OutputState }

func (Base64sha512ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Base64sha512Result)(nil)).Elem()
}

func (o Base64sha512ResultOutput) ToOutput(context.Context) pulumix.Output[*Base64sha512Result] {
	return pulumix.Output[*Base64sha512Result]{
		OutputState: o.OutputState,
	}
}

func (o Base64sha512ResultOutput) Result() pulumix.Output[string] {
	return pulumix.Apply[*Base64sha512Result](o, func(v *Base64sha512Result) string { return v.Result })
}
