// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class CidrsubnetArgs extends com.pulumi.resources.InvokeArgs {

    public static final CidrsubnetArgs Empty = new CidrsubnetArgs();

    @Import(name="input", required=true)
    private Output<String> input;

    public Output<String> input() {
        return this.input;
    }

    @Import(name="netnum", required=true)
    private Output<Integer> netnum;

    public Output<Integer> netnum() {
        return this.netnum;
    }

    @Import(name="newbits", required=true)
    private Output<Integer> newbits;

    public Output<Integer> newbits() {
        return this.newbits;
    }

    private CidrsubnetArgs() {}

    private CidrsubnetArgs(CidrsubnetArgs $) {
        this.input = $.input;
        this.netnum = $.netnum;
        this.newbits = $.newbits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CidrsubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CidrsubnetArgs $;

        public Builder() {
            $ = new CidrsubnetArgs();
        }

        public Builder(CidrsubnetArgs defaults) {
            $ = new CidrsubnetArgs(Objects.requireNonNull(defaults));
        }

        public Builder input(Output<String> input) {
            $.input = input;
            return this;
        }

        public Builder input(String input) {
            return input(Output.of(input));
        }

        public Builder netnum(Output<Integer> netnum) {
            $.netnum = netnum;
            return this;
        }

        public Builder netnum(Integer netnum) {
            return netnum(Output.of(netnum));
        }

        public Builder newbits(Output<Integer> newbits) {
            $.newbits = newbits;
            return this;
        }

        public Builder newbits(Integer newbits) {
            return newbits(Output.of(newbits));
        }

        public CidrsubnetArgs build() {
            if ($.input == null) {
                throw new MissingRequiredPropertyException("CidrsubnetArgs", "input");
            }
            if ($.netnum == null) {
                throw new MissingRequiredPropertyException("CidrsubnetArgs", "netnum");
            }
            if ($.newbits == null) {
                throw new MissingRequiredPropertyException("CidrsubnetArgs", "newbits");
            }
            return $;
        }
    }

}
