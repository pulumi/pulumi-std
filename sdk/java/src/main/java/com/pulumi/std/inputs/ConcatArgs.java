// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.util.List;
import java.util.Objects;


public final class ConcatArgs extends com.pulumi.resources.InvokeArgs {

    public static final ConcatArgs Empty = new ConcatArgs();

    @Import(name="input", required=true)
    private Output<List<List<Object>>> input;

    public Output<List<List<Object>>> input() {
        return this.input;
    }

    private ConcatArgs() {}

    private ConcatArgs(ConcatArgs $) {
        this.input = $.input;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConcatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConcatArgs $;

        public Builder() {
            $ = new ConcatArgs();
        }

        public Builder(ConcatArgs defaults) {
            $ = new ConcatArgs(Objects.requireNonNull(defaults));
        }

        public Builder input(Output<List<List<Object>>> input) {
            $.input = input;
            return this;
        }

        public Builder input(List<List<Object>> input) {
            return input(Output.of(input));
        }

        public Builder input(List<Object>... input) {
            return input(List.of(input));
        }

        public ConcatArgs build() {
            if ($.input == null) {
                throw new MissingRequiredPropertyException("ConcatArgs", "input");
            }
            return $;
        }
    }

}
