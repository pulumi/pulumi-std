// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RsadecryptArgs extends com.pulumi.resources.InvokeArgs {

    public static final RsadecryptArgs Empty = new RsadecryptArgs();

    @Import(name="cipherText", required=true)
    private Output<String> cipherText;

    public Output<String> cipherText() {
        return this.cipherText;
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    private RsadecryptArgs() {}

    private RsadecryptArgs(RsadecryptArgs $) {
        this.cipherText = $.cipherText;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RsadecryptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RsadecryptArgs $;

        public Builder() {
            $ = new RsadecryptArgs();
        }

        public Builder(RsadecryptArgs defaults) {
            $ = new RsadecryptArgs(Objects.requireNonNull(defaults));
        }

        public Builder cipherText(Output<String> cipherText) {
            $.cipherText = cipherText;
            return this;
        }

        public Builder cipherText(String cipherText) {
            return cipherText(Output.of(cipherText));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public RsadecryptArgs build() {
            if ($.cipherText == null) {
                throw new MissingRequiredPropertyException("RsadecryptArgs", "cipherText");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("RsadecryptArgs", "key");
            }
            return $;
        }
    }

}
