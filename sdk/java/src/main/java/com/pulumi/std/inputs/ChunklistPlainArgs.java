// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.Object;
import java.util.List;
import java.util.Objects;


public final class ChunklistPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final ChunklistPlainArgs Empty = new ChunklistPlainArgs();

    @Import(name="input", required=true)
    private List<Object> input;

    public List<Object> input() {
        return this.input;
    }

    @Import(name="size", required=true)
    private Integer size;

    public Integer size() {
        return this.size;
    }

    private ChunklistPlainArgs() {}

    private ChunklistPlainArgs(ChunklistPlainArgs $) {
        this.input = $.input;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChunklistPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChunklistPlainArgs $;

        public Builder() {
            $ = new ChunklistPlainArgs();
        }

        public Builder(ChunklistPlainArgs defaults) {
            $ = new ChunklistPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder input(List<Object> input) {
            $.input = input;
            return this;
        }

        public Builder input(Object... input) {
            return input(List.of(input));
        }

        public Builder size(Integer size) {
            $.size = size;
            return this;
        }

        public ChunklistPlainArgs build() {
            if ($.input == null) {
                throw new MissingRequiredPropertyException("ChunklistPlainArgs", "input");
            }
            if ($.size == null) {
                throw new MissingRequiredPropertyException("ChunklistPlainArgs", "size");
            }
            return $;
        }
    }

}
