// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ZipmapArgs extends com.pulumi.resources.InvokeArgs {

    public static final ZipmapArgs Empty = new ZipmapArgs();

    @Import(name="keys", required=true)
    private Output<List<String>> keys;

    public Output<List<String>> keys() {
        return this.keys;
    }

    @Import(name="values", required=true)
    private Output<List<Object>> values;

    public Output<List<Object>> values() {
        return this.values;
    }

    private ZipmapArgs() {}

    private ZipmapArgs(ZipmapArgs $) {
        this.keys = $.keys;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZipmapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZipmapArgs $;

        public Builder() {
            $ = new ZipmapArgs();
        }

        public Builder(ZipmapArgs defaults) {
            $ = new ZipmapArgs(Objects.requireNonNull(defaults));
        }

        public Builder keys(Output<List<String>> keys) {
            $.keys = keys;
            return this;
        }

        public Builder keys(List<String> keys) {
            return keys(Output.of(keys));
        }

        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }

        public Builder values(Output<List<Object>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<Object> values) {
            return values(Output.of(values));
        }

        public Builder values(Object... values) {
            return values(List.of(values));
        }

        public ZipmapArgs build() {
            if ($.keys == null) {
                throw new MissingRequiredPropertyException("ZipmapArgs", "keys");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("ZipmapArgs", "values");
            }
            return $;
        }
    }

}
