// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.util.List;
import java.util.Objects;


public final class CompactPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final CompactPlainArgs Empty = new CompactPlainArgs();

    @Import(name="input", required=true)
    private List<Object> input;

    public List<Object> input() {
        return this.input;
    }

    private CompactPlainArgs() {}

    private CompactPlainArgs(CompactPlainArgs $) {
        this.input = $.input;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompactPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompactPlainArgs $;

        public Builder() {
            $ = new CompactPlainArgs();
        }

        public Builder(CompactPlainArgs defaults) {
            $ = new CompactPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder input(List<Object> input) {
            $.input = input;
            return this;
        }

        public Builder input(Object... input) {
            return input(List.of(input));
        }

        public CompactPlainArgs build() {
            if ($.input == null) {
                throw new MissingRequiredPropertyException("CompactPlainArgs", "input");
            }
            return $;
        }
    }

}
