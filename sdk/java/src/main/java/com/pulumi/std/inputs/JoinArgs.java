// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class JoinArgs extends com.pulumi.resources.InvokeArgs {

    public static final JoinArgs Empty = new JoinArgs();

    @Import(name="input", required=true)
    private Output<List<String>> input;

    public Output<List<String>> input() {
        return this.input;
    }

    @Import(name="separator", required=true)
    private Output<String> separator;

    public Output<String> separator() {
        return this.separator;
    }

    private JoinArgs() {}

    private JoinArgs(JoinArgs $) {
        this.input = $.input;
        this.separator = $.separator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JoinArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JoinArgs $;

        public Builder() {
            $ = new JoinArgs();
        }

        public Builder(JoinArgs defaults) {
            $ = new JoinArgs(Objects.requireNonNull(defaults));
        }

        public Builder input(Output<List<String>> input) {
            $.input = input;
            return this;
        }

        public Builder input(List<String> input) {
            return input(Output.of(input));
        }

        public Builder input(String... input) {
            return input(List.of(input));
        }

        public Builder separator(Output<String> separator) {
            $.separator = separator;
            return this;
        }

        public Builder separator(String separator) {
            return separator(Output.of(separator));
        }

        public JoinArgs build() {
            if ($.input == null) {
                throw new MissingRequiredPropertyException("JoinArgs", "input");
            }
            if ($.separator == null) {
                throw new MissingRequiredPropertyException("JoinArgs", "separator");
            }
            return $;
        }
    }

}
