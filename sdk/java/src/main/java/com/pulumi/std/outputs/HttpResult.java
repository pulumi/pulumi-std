// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class HttpResult {
    private String id;
    private String responseBody;
    private String responseBodyBase64;
    private Map<String,String> responseHeaders;
    private Integer statusCode;

    private HttpResult() {}
    public String id() {
        return this.id;
    }
    public String responseBody() {
        return this.responseBody;
    }
    public String responseBodyBase64() {
        return this.responseBodyBase64;
    }
    public Map<String,String> responseHeaders() {
        return this.responseHeaders;
    }
    public Integer statusCode() {
        return this.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String responseBody;
        private String responseBodyBase64;
        private Map<String,String> responseHeaders;
        private Integer statusCode;
        public Builder() {}
        public Builder(HttpResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.responseBody = defaults.responseBody;
    	      this.responseBodyBase64 = defaults.responseBodyBase64;
    	      this.responseHeaders = defaults.responseHeaders;
    	      this.statusCode = defaults.statusCode;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder responseBody(String responseBody) {
            this.responseBody = Objects.requireNonNull(responseBody);
            return this;
        }
        @CustomType.Setter
        public Builder responseBodyBase64(String responseBodyBase64) {
            this.responseBodyBase64 = Objects.requireNonNull(responseBodyBase64);
            return this;
        }
        @CustomType.Setter
        public Builder responseHeaders(Map<String,String> responseHeaders) {
            this.responseHeaders = Objects.requireNonNull(responseHeaders);
            return this;
        }
        @CustomType.Setter
        public Builder statusCode(Integer statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }
        public HttpResult build() {
            final var o = new HttpResult();
            o.id = id;
            o.responseBody = responseBody;
            o.responseBodyBase64 = responseBodyBase64;
            o.responseHeaders = responseHeaders;
            o.statusCode = statusCode;
            return o;
        }
    }
}
