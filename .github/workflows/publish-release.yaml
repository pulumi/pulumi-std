permissions: write-all # Equivalent to default permissions plus id-token: write
name: Publish Release

on:
  push:
    tags:
      - v*.*.*
      - "!v*.*.*-**"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: true
  PYPI_USERNAME: __token__
  PUBLISH_PYPI: true
  JAVAVERSION: "11"
  TF_APPEND_USER_AGENT: pulumi
  TRAVIS_OS_NAME: linux
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: imports/github-secrets
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: NODE_AUTH_TOKEN=NPM_TOKEN,NPM_TOKEN,NUGET_PUBLISH_KEY,PYPI_PASSWORD=PYPI_API_TOKEN,PUBLISH_REPO_PASSWORD=OSSRH_PASSWORD,PUBLISH_REPO_USERNAME=OSSRH_USERNAME,SIGNING_KEY=JAVA_SIGNING_KEY,SIGNING_KEY_ID=JAVA_SIGNING_KEY_ID,SIGNING_PASSWORD=JAVA_SIGNING_PASSWORD,SLACK_WEBHOOK_URL

jobs:
  lint:
    uses: ./.github/workflows/stage-lint.yml
  test:
    uses: ./.github/workflows/stage-test.yml
  publish:
    needs: [test, lint]
    uses: ./.github/workflows/stage-publish.yml
    secrets: inherit
    with:
      goreleaser-args: -p 10 -f .goreleaser.yml --clean --skip=validate --timeout 60m0s --release-notes=CHANGELOG_PENDING.md
      ref: ${{ github.ref }}
  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.goversion }}
          check-latest: true
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2.0.0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: ${{env.NPM_REGISTRY_URL}}
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetverson}}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Build SDK
        run: make build_${{ matrix.language }}_sdk
      - name: Check worktree clean
        run: |
          git update-index -q --refresh
          if ! git diff-files --quiet; then
              >&2 echo "error: working tree is not clean, aborting!"
              git status
              git diff
              exit 1
          fi
      - name: Compress SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
      - if: ${{ matrix.language == 'python' && env.PUBLISH_PYPI == 'true' }}
        name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ env.PYPI_USERNAME }}
          password: ${{ env.PYPI_PASSWORD }}
          packages_dir: ${{github.workspace}}/sdk/python/bin/dist
      - if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
        uses: JS-DevTools/npm-publish@v1
        with:
          access: "public"
          token: ${{ env.NPM_TOKEN }}
          package: ${{github.workspace}}/sdk/nodejs/bin/package.json
      - if: ${{ matrix.language == 'dotnet' && env.PUBLISH_NUGET == 'true' }}
        name: publish nuget package
        run: |
          dotnet nuget push ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg -s ${{ env.NUGET_FEED_URL }} -k ${{ env.NUGET_PUBLISH_KEY }}
          echo "done publishing packages"
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
          - 6.x
        goversion:
          - 1.21.x
        language:
          - nodejs
          - python
          - dotnet
          - go
        nodeversion:
          - 20.x
        pythonversion:
          - "3.11"
  publish_java_sdk:
    continue-on-error: true
    name: publish_java_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Fetch secrets from ESC
      id: esc-secrets
      uses: pulumi/esc-action@v1
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Checkout Scripts Repo
      uses: actions/checkout@v3
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.x"
        check-latest: true
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v2
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: ${{ env.JAVAVERSION }}
    - name: Set PACKAGE_VERSION to Env
      run: echo "PACKAGE_VERSION=$(pulumictl get version --language generic)" >> $GITHUB_ENV
    - name: Publish Java SDK
      uses: gradle/gradle-build-action@9b814496b50909128c6a52622b416c5ffa04db49
      with:
        arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
        build-root-directory: ./sdk/java
        gradle-version: 7.4.1
